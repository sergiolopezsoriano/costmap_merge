<?xml version="1.0"?>
<launch>
  <arg name="base"              default="$(env TURTLEBOT_BASE)"         doc="mobile base type [kobuki, create, roomba]"/>
  <arg name="stacks"            default="$(env TURTLEBOT_STACKS)"       doc="stack type displayed in visualisation/simulation [circles, hexagons]"/>
  <arg name="3d_sensor"         default="$(env TURTLEBOT_3D_SENSOR)"    doc="3d sensor types [kinect, asux_xtion_pro]"/>
  <arg name="x"                 default="0"/>
  <arg name="y"                 default="0"/>
  <arg name="z"                 default="0"/>
  <arg name="roll"              default="0"/>
  <arg name="pitch"             default="0"/>
  <arg name="yaw"               default="0"/>
  <arg name="robot_ns"          default="turtlebot"/>
  <arg name="tf_prefix"         default="turtlebot_tf"/>
  <arg name="width"             default="5"/>
  <arg name="height"            default="5"/>
  <arg name="resolution"        default="0.02"/>
  <arg name="merge_costmaps"    default="True"/>
  <arg name="init_pose" value="-x $(arg x) -y $(arg y) -z $(arg z) -R $(arg roll) -P $(arg pitch) -Y $(arg yaw)" />

  <param name="robot_description" command="$(find xacro)/xacro '$(find turtlebot_description)/robots/$(arg base)_$(arg stacks)_$(arg 3d_sensor).urdf.xacro'"/>

  <!-- Gazebo model spawner -->
  <node name="spawn_turtlebot_model" pkg="gazebo_ros" type="spawn_model"
        args="$(arg init_pose) -unpause -urdf -param robot_description -model $(arg robot_ns)"/>

  <!-- Velocity muxer -->
  <node pkg="nodelet" type="nodelet" name="mobile_base_nodelet_manager" args="manager"/>
  <node pkg="nodelet" type="nodelet" name="cmd_vel_mux"
        args="load yocs_cmd_vel_mux/CmdVelMuxNodelet mobile_base_nodelet_manager">
    <param name="yaml_cfg_file" value="$(find turtlebot_bringup)/param/mux.yaml"/>
    <remap from="cmd_vel_mux/output" to="mobile_base/commands/velocity"/>
  </node>

  <!-- Bumper/cliff to pointcloud (not working, as it needs sensors/core messages) -->
<!--  <include file="$(find turtlebot_bringup)/launch/includes/kobuki/bumper2pc.launch.xml"/>-->

  <!-- Fake laser -->
  <node pkg="nodelet" type="nodelet" name="laserscan_nodelet_manager" args="manager"/>
  <node pkg="nodelet" type="nodelet" name="depthimage_to_laserscan"
        args="load depthimage_to_laserscan/DepthImageToLaserScanNodelet laserscan_nodelet_manager">
    <param name="scan_height" value="10"/>
    <param name="output_frame_id" value="$(arg tf_prefix)/camera_depth_frame"/>
    <param name="range_min" value="0.45"/>
    <remap from="image" to="camera/depth/image_raw"/>
  </node>

  <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher">
    <param name="publish_frequency" type="double" value="30.0" />
  </node>

  <node pkg="diagnostic_aggregator" type="aggregator_node" name="diagnostic_aggregator">
    <rosparam command="load" file="$(find kobuki_node)/param/diagnostics.yaml"/>
  </node>

  <include file="$(find costmap_merge)/launch/robots/move_base_simulation.launch">
    <arg name="robot_ns"        value="$(arg robot_ns)"/>
    <arg name="tf_prefix"       value="$(arg tf_prefix)"/>
    <arg name="width"           value="$(arg width)"/>
    <arg name="height"          value="$(arg height)"/>
    <arg name="resolution"      value="$(arg resolution)"/>
    <arg name="merge_costmaps"  value="$(arg merge_costmaps)"/>
  </include>

</launch>

<?xml version="1.0"?>
<launch>

  <arg name="robot_ns"/>
  <arg name="robot_type"/>
  <arg name="x"/>
  <arg name="y"/>
  <arg name="z"/>
  <arg name="roll"/>
  <arg name="pitch"/>
  <arg name="yaw"/>
  <arg name="width"/>
  <arg name="height"/>
  <arg name="resolution"/>
  <arg name="sim"/>

  <group ns="$(arg robot_ns)">
    <arg name="tf_prefix" value="$(arg robot_ns)_tf"/>
    <param name="tf_prefix" value="$(arg tf_prefix)"/>
    <param name="robot_type" value="$(arg robot_type)"/>
    <node pkg="tf" type="static_transform_publisher" name="basefootprint_2_baselink"
          args="0 0 0 0 0 0 $(arg tf_prefix)/base_footprint $(arg tf_prefix)/base_link 100"/>
    <include file="$(find hector_quadrotor_gazebo)/launch/spawn_quadrotor.launch" >
      <arg name="model" value="$(find hector_quadrotor_description)/urdf/quadrotor_hokuyo_utm30lx.gazebo.xacro"/>
      <arg name="controllers" value="
          controller/attitude
          controller/velocity
          controller/position
          "/>
      <arg name="name" value="$(arg robot_ns)"/>
      <arg name="tf_prefix" value="$(arg tf_prefix)"/>
      <arg name="x" value="$(arg x)"/>
      <arg name="y" value="$(arg y)"/>
      <arg name="z" value="$(arg z)"/>
    </include>

    <include file="$(find costmap_merge)/launch/includes/detector_move_base.launch.xml">
      <arg name="robot_ns" value="$(arg robot_ns)"/>
      <arg name="tf_prefix" value="$(arg tf_prefix)"/>
      <arg name="width" value="$(arg width)"/>
      <arg name="height" value="$(arg height)"/>
      <arg name="resolution" value="$(arg resolution)"/>
    </include>

    <node name="detector" pkg="costmap_merge" type="detector.py" output="screen" if="$(eval arg('robot_type') == 'detector')">
      <rosparam file="$(find costmap_merge)/config/detector.yaml" command="load"/>
    </node>
    <node name="detection_manager" pkg="costmap_merge" type="detection_manager.py" output="screen" if="$(eval arg('robot_type') == 'detector')">
      <rosparam file="$(find costmap_merge)/config/detection_manager.yaml" command="load"/>
    </node>
    <node name="transform_manager" pkg="costmap_merge" type="transform_manager.py" output="screen" if="$(eval arg('robot_type') == 'detector')"/>
    <node name="agent" pkg="costmap_merge" type="agent.py" output="screen"/>
    <node name="costmap_network" pkg="costmap_merge" type="costmap_network.py" output="screen">
      <rosparam file="$(find costmap_merge)/config/costmap_network.yaml" command="load"/>
    </node>
  </group>
 
</launch>
